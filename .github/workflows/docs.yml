name: Documentation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.5.14"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --frozen
          uv pip install mkdocs mkdocs-material mkdocstrings[python] \
            mkdocs-git-revision-date-localized-plugin \
            mkdocs-minify-plugin \
            mkdocs-awesome-pages-plugin

      - name: Build documentation
        run: |
          uv run mkdocs build --strict --verbose

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v5
        with:
          name: documentation
          path: site/

  deploy-preview:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v5

      - name: Download documentation
        uses: actions/download-artifact@v6
        with:
          name: documentation
          path: site/

      - name: Deploy PR preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: pr-${{ github.event.pull_request.number }}

      - name: Comment PR with preview link
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-${prNumber}/`;

            const comment = `ðŸ“š **Documentation Preview**

            Your documentation preview is ready!

            ðŸ”— [View Documentation Preview](${previewUrl})

            This preview will be updated automatically with new commits.`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Documentation Preview')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment,
              });
            }

  deploy-main:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download documentation
        uses: actions/download-artifact@v6
        with:
          name: documentation
          path: site/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  trigger-readthedocs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Trigger ReadTheDocs build
        run: |
          # This will be triggered automatically via webhook
          # This step is just a placeholder for manual triggering if needed
          echo "ReadTheDocs will build automatically via webhook"
