name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.5.14"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --frozen

      - name: Extract version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build package
        run: |
          uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: dist
          path: dist/

  test-release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: dist
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Test installation
        run: |
          # Create a virtual environment and install the package
          uv venv
          uv pip install dist/*.whl

          # Test the import using uv run
          uv run python -c "import dqx; print(dqx.__version__)"

  publish-pypi:
    needs: test-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    environment:
      name: pypi
      url: https://pypi.org/project/dqlib/

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  publish-testpypi:
    needs: test-release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    environment:
      name: testpypi
      url: https://test.pypi.org/project/dqlib/

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: dist
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  create-release:
    needs: publish-pypi
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: dist
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  notify:
    needs: [publish-pypi, create-release]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send notification
        run: |
          echo "Release completed for ${{ github.ref }}"
          # Add Slack/Discord/Email notification here if needed
