# CodeRabbit Configuration
# AI-powered code review for DQX

# Language settings
language: "en-US"

# Review settings
reviews:
  # Enable high-quality reviews
  high_level_summary: true
  poem: false  # Disable poem generation
  review_status: true
  collapse_walkthrough: false

  # Request changes for critical issues
  request_changes_workflow: true

  # Auto-review on PR open/update
  auto_review:
    enabled: true
    drafts: false  # Don't review draft PRs

# Path filters
path_filters:
  # Exclude from reviews
  excluded:
    - "**/*.lock"
    - "**/*.min.js"
    - "**/*.min.css"
    - "**/vendor/**"
    - "**/node_modules/**"
    - "**/.git/**"
    - "**/__pycache__/**"
    - "**/*.pyc"
    - "**/htmlcov/**"
    - "**/.coverage"
    - "**/dist/**"
    - "**/build/**"
    - "**/*.egg-info/**"

  # Always review these critical files
  always_include:
    - "src/**/*.py"
    - "tests/**/*.py"
    - "pyproject.toml"
    - ".github/workflows/*.yml"

# Custom review instructions for DQX
instructions:
  - "Focus on Python best practices and PEP 8 compliance"
  - "Check for proper type hints on all functions and methods"
  - "Ensure all public functions have Google-style docstrings"
  - "Verify test coverage for new code"
  - "Check for SQL injection risks in query generation"
  - "Ensure symbolic expressions are properly validated"
  - "Look for performance issues in metric calculations"
  - "Verify error messages follow the pattern: '[What failed]: [Why]. [What to do]. [Alternatives]'"
  - "Check that new features follow KISS/YAGNI principles"
  - "Ensure commits follow conventional commit format"

# Code quality checks
code_quality:
  # Python specific
  python:
    # Type checking
    type_checking:
      enabled: true
      strict: true

    # Docstring checking
    docstrings:
      enabled: true
      style: "google"
      require_return_type: true
      require_param_types: true

    # Complexity limits
    complexity:
      max_cognitive_complexity: 15
      max_cyclomatic_complexity: 10
      max_function_length: 50
      max_file_length: 500

    # Security checks
    security:
      check_sql_injection: true
      check_command_injection: true
      check_path_traversal: true

  # General checks
  general:
    # No console.log, print statements (except in examples)
    no_debug_statements: true

    # Enforce consistent naming
    naming_convention: "snake_case"

    # No commented out code
    no_commented_code: true

    # No TODO without issue reference
    todo_with_issue: true

# DQX-specific patterns to check
custom_patterns:
  # Check for proper MetricProvider usage
  - pattern: "mp\\.[a-z_]+\\("
    message: "Ensure metric methods are properly typed and documented"

  # Check for proper assertion usage
  - pattern: "ctx\\.assert_that\\("
    message: "Ensure assertions have proper 'where' clauses with name and severity"

  # Check for SQL generation
  - pattern: "SELECT|INSERT|UPDATE|DELETE"
    message: "Review SQL generation for injection risks and performance"

  # Check for proper error handling
  - pattern: "raise [A-Za-z]+Error"
    message: "Ensure error messages follow the standard format"

# Performance checks
performance:
  # Flag potential N+1 queries
  check_n_plus_one: true

  # Flag large data operations without limits
  check_unbounded_queries: true

  # Flag synchronous operations that could be async
  suggest_async: false  # DQX is sync by design

# Testing requirements
testing:
  # Require tests for new code
  require_tests: true

  # Minimum coverage for new code
  min_coverage: 100

  # Test naming convention
  test_naming: "test_*"

  # Require integration tests for new features
  require_integration_tests: true

# Documentation requirements
documentation:
  # Require README updates for new features
  require_readme_update: true

  # Require docstring updates
  require_docstring_update: true

  # Check for outdated examples
  check_examples: true

# PR size recommendations
pr_size:
  max_lines: 500
  warn_lines: 300

# Review response time
response_time:
  # Post initial review within 5 minutes
  initial_review_mins: 5

  # Update review on new commits within 3 minutes
  update_review_mins: 3

# Integration settings
integrations:
  # Post review summary as comment
  github:
    summary_comment: true
    inline_comments: true

  # Don't block merge on CodeRabbit approval
  blocking: false
